management.endpoints.web.exposure.include=health,info
spring.main.banner-mode=off

## root logger first, followed by package or class specific levels
logging.level=INFO
logging.level.com.darren=DEBUG
logging.level.org.springframework.boot.actuate=INFO


spring.jackson.serialization.INDENT_OUTPUT=true

## PERSISTENCE ##

#http://h2database.com/html/features.html
#spring.datasource.url= jdbc:h2:mem:cardb
#spring.datasource.username = sa
#spring.datasource.password =

#spring.datasource.url=jdbc:mysql://localhost:3306/sqltest?characterEncoding=utf8&useSSL=true
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.url=jdbc:postgresql://localhost:5432/Activiti
spring.datasource.username=postgres
spring.datasource.password=POSTGRES
spring.datasource.driver-class-name=org.postgresql.Driver

#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

  # activiti default configuration
activiti.database-schema-update: true
activiti.check-process-definitions: true
activiti.process-definition-location-prefix: classpath:/processes/
spring.activiti.check-process-definitions: false   
## fixed start error: java.sql.SQLFeatureNotSupportedException: \u8FD9\u4E2A org.postgresql.jdbc.PgConnection.createClob()
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Posr

#spring.jpa.properties.hibernate.dialect=PostgreSQLDialect
# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update


## reduce connection pool size
#spring.datasource.tomcat.initial-size=5

#fm.event.endpoint=http://fm-event


spring.thymeleaf.prefix=classpath:/pages/
spring.thymeleaf.suffix=.html
spring.resources.static-locations=classpath:classpath:/resources/,classpath:/static/,classpath:/public/


##mybatis
mybatis.typeAliasesPackage = com.darren.machine.domain
mybatis.mapperLocations = classpath:mapper/*.xml
#mybatis.config-location=classpath:mybatis-config.xml


#tomcat port
server.port=8080


